name: CI/CD Pipeline with DAST

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest

  dast:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Start the application
      env:
        FLASK_HOST: '0.0.0.0'
        FLASK_PORT: '5000'
        FLASK_DEBUG: 'False'
        DAST_SCAN: 'True'  # Enable DAST scanning mode
      run: |
        python run.py &
        echo "Waiting for application to start..."
        # Increase timeout and add better health check
        for i in {1..60}; do
          if curl -s http://localhost:5000 > /dev/null; then
            echo "Application is running!"
            exit 0
          fi
          echo "Waiting for application to start... attempt $i"
          sleep 2
        done
        echo "Application failed to start within timeout"
        exit 1
        
    - name: Run OWASP ZAP DAST
      uses: zaproxy/action-baseline@v0.9.0
      with:
        target: 'http://localhost:5000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a -t http://localhost:5000 -g gen.conf -r testreport.html'
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        fail_action: false  # Don't fail the pipeline on ZAP findings
        
    - name: Check if ZAP report exists
      run: |
        if [ ! -f zap-report.html ]; then
          echo "ZAP report not found. Checking for alternative report..."
          if [ -f testreport.html ]; then
            mv testreport.html zap-report.html
          else
            echo "No ZAP report found. This might indicate a scanning issue."
            exit 1
          fi
        fi

  deploy:
    needs: [test, dast]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here 