name: CI/CD Pipeline with DAST

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest

  dast:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Start the application
      run: |
        python run.py &
        echo "Waiting for application to start..."
        timeout 30s bash -c 'until curl -s http://localhost:5000 > /dev/null; do sleep 1; done' || exit 1
        echo "Application is running!"
        
    - name: Run OWASP ZAP DAST
      uses: zaproxy/action-baseline@v0.9.0
      with:
        target: 'http://localhost:5000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        
    - name: Upload ZAP report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: zap-report.html
        if-no-files-found: error

  deploy:
    needs: [test, dast]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here 